# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Trigger Buildkite Pipeline
        # You may pin to the exact commit or the version.
        # uses: buildkite/trigger-pipeline-action@ad8b8eadea8fc06f0afb726f54faca94ecfe5838
        uses: buildkite/trigger-pipeline-action@v2.0.0
        with:
          # Buildkite API Access Token
          #buildkite_api_access_token: 
          # The pipline to create a build on, in the format <org-slug>/<pipeline-slug>
          #pipeline: 
          # The commit SHA of the build
          commit: "HEAD"
          # The branch of the build
          branch: "main"
          # The message for the build
          message: ":github: Triggered from a GitHub Action"
          # Additional environment variables to set on the build, in JSON format
          #build_env_vars: # optional
          # Meta-data to set on the build, in JSON format
          #build_meta_data: # optional
          # Ignore pipeline branch filtering when creating a new build. true or false
          #ignore_pipeline_branch_filter: tr
          
